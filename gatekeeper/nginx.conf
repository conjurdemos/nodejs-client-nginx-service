upstream service {
  server ws;
}

error_log stderr notice;

server {
  location / {
    access_by_lua '
    -- Non-blocking permission check
    local res = ngx.location.capture("/conjur-authn")
    local status = res.status

    -- Authz returns 2xx if the check passes.  We map 404 onto 403 for simplicity
    -- and respond with 500 to errors other than 401 and 403.  Note that conjur
    -- does not use 3xx redirects, so the status >= 300 check is fine.
    if status >= 300 then
      ngx.log(ngx.NOTICE, "permission check /conjur-authn failed")
    
      if status == 401 then
        ngx.exit(401)
      elseif status == 403 then
        ngx.exit(403)
      elseif status == 404 then
        ngx.exit(403)
      else
        ngx.exit(500) 
      end
    end
    ';
    proxy_pass http://service;
  }

  # internal location that proxies to the conjur authz service
  location ^~ /conjur-auth {
    internal;
    
    proxy_ssl_trusted_certificate /etc/conjur.pem;
    proxy_intercept_errors on;
    proxy_next_upstream error timeout http_403;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;

    proxy_pass @@conjur_appliance_url@@/authz/@@conjur_account@@/resources/webservice/@@conjur_policy_id@@/nodejs-client-nginx-service-1.0/ws?check&privilege=execute;
  }
}
